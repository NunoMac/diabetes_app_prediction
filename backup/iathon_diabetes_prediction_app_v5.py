{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "80f19ce5",
   "metadata": {},
   "outputs": [],
   "source": [
    "import streamlit as st\n",
    "import pandas as pd\n",
    "import joblib\n",
    "from sklearn.preprocessing import LabelEncoder\n",
    "\n",
    "# Load the trained LightGBM model\n",
    "model = joblib.load('diabetes_prediction_sylhetdb_rf_model.pkl')\n",
    "\n",
    "# Function to preprocess user input data\n",
    "def preprocess_input(idade, poliuria, polidipsia, perda_peso_repentina, polifagia, visao_embacada, irritabilidade, cicatrizacao_lenta, alopecia, peso, altura):\n",
    "    # Calculate BMI and classify obesity as 1 (obese) or 0 (not obese)\n",
    "    altura_metros = altura / 100\n",
    "    bmi = peso / (altura_metros ** 2)\n",
    "    obesidade = 1 if bmi >= 30 else 0\n",
    "\n",
    "    # Create a DataFrame with the user input\n",
    "    user_data = pd.DataFrame({\n",
    "        'idade': [idade],\n",
    "        'poliuria': [poliuria],\n",
    "        'polidipsia': [polidipsia],\n",
    "        'perda_peso_repentina': [perda_peso_repentina],\n",
    "        'polifagia': [polifagia],\n",
    "        'visao_embacada': [visao_embacada],\n",
    "        'irritabilidade': [irritabilidade],\n",
    "        'cicatrizacao_lenta': [cicatrizacao_lenta],\n",
    "        'alopecia': [alopecia],\n",
    "        'obesidade': [obesidade]\n",
    "    })\n",
    "\n",
    "    return user_data\n",
    "\n",
    "\n",
    "# Streamlit app\n",
    "def main():\n",
    "    \n",
    "    # User input form\n",
    "    idade = st.slider(\"Idade\", 0, 100, 30)\n",
    "    poliuria = st.checkbox(\"Produção excessiva de urina\", help=\"Poliúria\")\n",
    "    polidipsia = st.checkbox(\"Sede excessiva\", help=\"Polidipsia\")\n",
    "    perda_peso_repentina = st.checkbox(\"Perda significativa de peso sem motivo aparente\", help=\"Perda de Peso Repentina\")\n",
    "    polifagia = st.checkbox(\"Aumento anormal do apetite\", help=\"Polifagia\")\n",
    "    visao_embacada = st.checkbox(\"Visão embaçada ou turva\", help=\"Visão Embaçada\")\n",
    "    irritabilidade = st.checkbox(\"Alterações frequentes de humor\", help=\"Irritabilidade\")\n",
    "    cicatrizacao_lenta = st.checkbox(\"Feridas que demoram a cicatrizar\", help=\"Cicatrização Lenta\")\n",
    "    alopecia = st.checkbox(\"Perda de cabelo\", help=\"Alopecia\")\n",
    "    \n",
    "    peso = st.number_input(\"Peso (kg)\", 0.0, format=\"%0.1f\", key=\"peso\")\n",
    "    altura = st.number_input(\"Altura (cm)\", 0.0, format=\"%0.1f\", key=\"altura\")\n",
    "\n",
    "\n",
    "    st.markdown(\n",
    "    \"\"\"\n",
    "    <style>\n",
    "    .st-eb {\n",
    "        width: 150px !important; /* Adjust the width as needed */\n",
    "    }\n",
    "    </style>\n",
    "    \"\"\",\n",
    "    unsafe_allow_html=True,\n",
    "    )\n",
    "\n",
    "\n",
    "    if st.button(\"Prever\"):\n",
    "        # Preprocess user input\n",
    "        user_data = preprocess_input(idade, poliuria, polidipsia, perda_peso_repentina, polifagia, visao_embacada, irritabilidade, cicatrizacao_lenta, alopecia, peso, altura)\n",
    "\n",
    "        # Make a prediction\n",
    "        prediction = model.predict(user_data)\n",
    "\n",
    "        st.header(\"Resultado da Previsão\")\n",
    "        if prediction == 1:\n",
    "            st.write(\"O nosso modelo indica que você tem boas chances de desenvolver diabestes\")\n",
    "            st.write(\"É boa ideia falar com um humano. Fale com o seu médico que o aconselhará nos passos a seguir.\")\n",
    "        else:\n",
    "            st.write(\"O nosso modelo não encontrou razões para grandes preocupações em relação à diabetes.\")\n",
    "            st.write(\"Em qualquer caso, sempre acompanhe a sua saúde junto de profissionais qualificados.\")\n",
    "\n",
    "if __name__ == '__main__':\n",
    "    main()\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
